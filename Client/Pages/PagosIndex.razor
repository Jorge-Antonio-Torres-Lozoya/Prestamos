@page "/pagos"
@using Servicios_Prestamos.Shared.Modelos;
@inject HttpClient http
@inject NavigationManager navegar

<h3 class="my-2">Pagos</h3>

@if (losPagos == null)

{
    <p class="my-2 mx-2"><em>Loading....</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Monto_Pago</th>
                <th>Fecha_Pago</th>
                <th>Solicitud Id</th>
                <th>Acciones</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var pago in losPagos)
            {

                <tr>
                    <td>@pago.PagoId</td>
                    <td>@pago.Monto_Pago</td>
                    <td>@pago.Fecha_Pago</td>
                    <td>@pago.SolicitudId</td>

                    @*  @{
            var pagos = solicitud.Pagos?.Select(pago => pago.PagoId);
            var pagosConcatenados = pagos != null ? string.Join(", ", pagos) : string.Empty;
            }
            <td class=" px-1">@pagosConcatenados</td>*@

                    <td>
                        <button class="btn-danger mx-3" @onclick="(()=>Eliminar(pago.PagoId))"><span class="oi oi-trash"></span></button>
                        <button class="btn-secondary" @onclick="(()=>Modificar(pago.PagoId))">
                            <span class=" oi oi-pencil"></span>

                        </button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
<button class="btn btn-primary my-2" @onclick="Agregar">Nuevo Pago<span class="oi oi-plus mx-2"></span></button>
@code {
    private List<Pago> losPagos;
    protected override async Task OnInitializedAsync()
    {
        losPagos = await http.GetFromJsonAsync<List<Pago>>("api/pagoes");
    }
    private void Agregar()
    {
        navegar.NavigateTo("/pago/nuevo");
    }
    private async void Eliminar(int id)
    {
        await http.DeleteAsync($"api/pagoes/{id}");
        losPagos = await http.GetFromJsonAsync<List<Pago>>("api/pagoes");
        StateHasChanged();
    }
    private void Modificar(int id)
    {
        navegar.NavigateTo($"/pago/modificar/{id}");
    }

}