

@page "/usuarios"
@using Servicios_Prestamos.Shared.Modelos;
@inject HttpClient http
@inject NavigationManager navegar

<PageTitle>Usuarios</PageTitle>

<h1>Usuarios</h1>



@if (losUsuarios == null)

{
    <p class="my-2 mx-2"><em>Loading....</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Correo</th>
                <th>Telefono</th>
                <th>Acciones</th>


            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in losUsuarios)
            {

                <tr>
                    <td>@usuario.UsuarioId</td>
                    <td>@usuario.Nombre</td>
                    <td>@usuario.Correo</td>
                    <td>@usuario.Telefono</td>


                    <td>
                        <button class="btn-danger mx-3" @onclick="(()=>Eliminar(usuario.UsuarioId))"><span class="oi oi-trash"></span></button>
                        <button class="btn-secondary" @onclick="(()=>Modificar(usuario.UsuarioId))">
                            <span class=" oi oi-pencil"></span>

                        </button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
<button class="btn btn-primary my-2 ps-4" @onclick="Agregar">Nuevo Cliente<span class="oi oi-add mx-2"></span></button>
@code {
    private List<Usuario> losUsuarios;
    protected override async Task OnInitializedAsync()
    {
        losUsuarios = await http.GetFromJsonAsync<List<Usuario>>("api/usuarios");
    }
    private void Agregar()
    {
        navegar.NavigateTo("/usuario/nuevo");
    }
    private async void Eliminar(int id)
    {
        await http.DeleteAsync($"api/usuarios/{id}");
        losUsuarios = await http.GetFromJsonAsync<List<Usuario>>("api/usuarios");
        StateHasChanged();
    }
    private void Modificar(int id)
    {
        navegar.NavigateTo($"/usuario/modificar/{id}");
    }

}